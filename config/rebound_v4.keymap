/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define ADJ     3
#define NUM     4

#define AG(keycode) &ag LG(keycode) keycode     // AutoGUI Macro

#define MEH     &kp LC(LS(LALT))
#define HYPER   &kp LC(LS(LA(LGUI)))

&mt { tapping-term-ms = <250>; };

/ {
    behaviors {
        tdques: td_ques {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&htslash 0 SLASH>, <&kp QUESTION>, <&wth>;
        };

        tdquote: td_quote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        tdcolon: td_colon {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SEMICOLON>, <&kp COLON>;
        };

        tdleft: td_left {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mt LA(LEFT) LEFT>, <&ag LEFT>;

            tapping-term-ms = <250>;
        };

        ag_ht: ag_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "AG_HT";
            bindings = <&gui>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        tdright: td_right_arrow {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mt LA(RIGHT_ARROW) RIGHT>, <&ag RIGHT_ARROW>;

            tapping-term-ms = <250>;
        };

        tdup: td_up_arrow {
            compatible = "zmk,behavior-tap-dance";
            label = "TDU";
            #binding-cells = <0>;
            bindings = <&mt PAGE_UP UP_ARROW>, <&ag UP_ARROW>;

            tapping-term-ms = <250>;
        };

        tddown: td_down_arrow {
            compatible = "zmk,behavior-tap-dance";
            label = "TDDOW";
            #binding-cells = <0>;
            bindings = <&mt PAGE_DOWN DOWN_ARROW>, <&ag DOWN_ARROW>;

            tapping-term-ms = <250>;
        };

        htslash: htslash {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSLASH";
            bindings = <&interrobang>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        tdsquare: tdsquare {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&ag LEFT_BRACKET>, <&kp LEFT_BRACE>;

            label = "TDSQUARE";
        };

        tdcurly: tdcurly {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&ag RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

            label = "TDCURLY";
        };

        hyper: hyper {
            compatible = "zmk,behavior-tap-dance";
            label = "HYPER";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&mt LS(LG(LA(LCTRL))) ESCAPE>,
                <&mt C_AL_LOCK C_POWER>,
                <&htsos LC(C_POWER) 0>;
        };

        htsos: htsos {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSOS";
            bindings = <&kp>, <&sos>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        ht_emdash: ht_emdash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_EMDASH";
            bindings = <&kp>, <&doubledash>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };

        td_dash: td_dash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DASH";
            #binding-cells = <0>;
            bindings =
                <&mt UNDER MINUS>,
                <&ht_emdash LS(LA(MINUS)) 0>,
                <&ht_endash LA(MINUS) 0>;
        };

        ht_endash: ht_endash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_ENDASH";
            bindings = <&kp>, <&tripledash>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };

        td_4key: td_4key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_4KEY";
            #binding-cells = <0>;
            bindings = <&mt F4 LA(NUMBER_3)>, <&kp DOLLAR>;
        };

        td_5key: td_5key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_5KEY";
            #binding-cells = <0>;
            bindings = <&mt F5 PERCENT>, <&kp LA(NUMBER_2)>;
        };

        td_3key: td_3key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_3KEY";
            #binding-cells = <0>;
            bindings = <&mt F3 HASH>, <&kp LA(LS(N2))>;
        };
    };
};

/ {
    macros {
        ag: ag {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AG";
        };

        gui: cmg {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LGUI>;

            label = "CMG";
        };

        interrobang: interrobang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp EXCLAMATION>,
                <&macro_release>;

            label = "interrobang";
        };

        blah: blah {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LS(LCTRL))>, <&macro_release>;

            label = "BLAH";
        };

        wth: wth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp QUESTION &kp QUESTION>,
                <&macro_release>;

            label = "WTH";
        };

        sos: sos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LG(ESCAPE))>, <&macro_release>;

            label = "SOS";
        };

        powerup: powerup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(C_POWER)>, <&macro_release>;

            label = "POWERUP";
        };

        doubledash: doubledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp MINUS &kp MINUS>, <&macro_release>;

            label = "DOUBLEDASH";
        };

        tripledash: tripledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp MINUS &kp MINUS &kp MINUS>,
                <&macro_release>;

            label = "TRIPLEDASH";
        };
    };

    combos {
        compatible = "zmk,combos";

        capwordz {
            bindings = <&caps_word>;
            key-positions = <25 34>;
        };
    };


        keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
        &kp ESC             &kp Q       &kp W       &kp E       &kp R                       &kp T                                       &kp Y            &kp U            &kp I                        &kp O           &kp P          &kp LA(BSPC)
        &mt LC(LS(LALT)) TAB  &kp A       &kp S       &kp D       &kp F                       &kp G               &kp PG_UP               &kp H            &kp J            &kp K                        &kp L           &kp SQT        &kp SEMI
        &mt LSHIFT HOME     &kp Z       &kp X       &kp C       &kp V                       &kp B               &kp PG_DN               &kp N            &kp M            &kp COMMA                    &kp DOT         &kp UP         &kp FSLH
        &mt LCTRL LC(TAB)   &kp LGUI    &mt LALT BSPC   &mt LALT BSPC    &lt LWR ENTER    &lt LWR ENTER     &none                   &lt RAS SPACE  &lt RAS SPACE  &mt LC(LS(LA(LGUI))) END     &kp LEFT        &kp DOWN       &kp RIGHT
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };

        lower_layer {
            label = "Lower";
            bindings = <
        &rgb_ug RGB_TOG     &kp EXCL    &kp AT          &kp HASH    &kp LA(N3)          &kp PRCNT                           &kp CARET         &kp AMPS         &kp ASTRK           &kp LPAR    &kp RPAR        &kp EQUAL
        &trans              &trans      &kp LA(LS(N2))  &kp DOLLAR  &trans              &trans              &trans          &rgb_ug RGB_HUI   &rgb_ug RGB_BRI  &rgb_ug RGB_SAI     &kp MINUS   &kp PLUS        &kp BSLH
        &trans              &trans      &trans          &trans      &trans              &trans              &trans          &rgb_ug RGB_HUD   &rgb_ug RGB_BRI  &rgb_ug RGB_SAD     &trans      &kp PG_UP       &kp FSLH
        &bootloader         &trans      &trans          &trans      &trans              &trans              &trans          &trans            &trans           &trans              &trans      &kp PG_DN       &trans
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };
        raise_layer {
            label = "Raise";
            bindings = <
        &rgb_ug RGB_TOG     &kp N1      &kp N2      &kp N3      &kp N4         &kp N5                                       &kp N6            &kp N7          &kp N8          &kp N9          &kp N0         &kp EQUAL
        &kp F1              &kp F2      &kp F3      &kp F4      &kp F5         &kp F6                   &trans              &trans            &trans          &trans          &kp MINUS       &kp PLUS       &kp BSLH
        &kp F7              &kp F8      &kp F9      &kp F10     &kp F11        &kp F12                  &trans              &trans            &trans          &trans          &trans          &kp C_VOL_UP   &kp FSLH
        &none               &trans      &trans      &trans      &trans         &trans                   &trans              &trans            &trans          &trans          &kp LG(MINUS)   &kp C_VOL_DN   &kp LG(PLUS)
                        >;
                        sensor-bindings = <&inc_dec_kp LG(LS(RBKT)) LG(LS(LBKT))>;
                };
        adjust_layer {
            label = "Adjust";
            bindings = <
        &trans              &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &bt BT_CLR                                      &kp N6                  &kp N7        &kp N8        &kp N9      &kp N0          &none
        &none               &none        &none        &none        &none           &none                    &kp QMARK              &kp LEFT                &kp DOWN      &kp UP        &kp RIGHT   &trans          &none
        &none               &none        &none        &none        &none           &none                    &none                  &kp HOME                &kp PG_DN     &kp PG_UP     &kp END     &none           &none
        &none               &none        &none        &trans       &none           &trans                   &none                  &trans                  &none         &trans        &none       &none           &trans
                        >;
                        sensor-bindings = <&inc_dec_kp LG(LS(LBKT)) LG(LS(RBKT))>;
                };
        };
};
